{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","amountOfPages","Math","ceil","pages","firstPage","lastPage","className","cn","disabled","href","onClick","map","el","active","perPageOptions","items","App","useState","setPerPage","setCurrentPage","firstItemIndex","lastItemIndex","min","currentItems","slice","id","value","onChange","event","newPerPage","target","option","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQd,EAAW,EAAGW,GAEtBI,EAA4B,IAAhBN,EACZO,EAAWP,IAAgBE,EAcjC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QApBe,WAChBN,GACHL,EAAaD,EAAc,IAazB,oBAWDK,EAAMQ,KAAI,SAAAC,GAAE,OACX,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAAOd,IAD9C,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IAA3C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QA1Ce,WAChBL,GACHN,EAAaD,EAAc,IAmCzB,wBC3DFgB,EAAiB,CAAC,EAAG,EAAG,GAAI,IAE5BC,EAAQ1B,EAAW,EAAG,IAAIsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEpCuB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBqB,EAApB,KAEMC,GAAkBtB,EAAc,GAAKD,EACrCwB,EAAgBpB,KAAKqB,IAAIF,EAAiBvB,EAV/B,IAWX0B,EAAeR,EAAMS,MAAMJ,EAAgBC,GASjD,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EAAiB,EADlD,cACyDC,EADzD,eAxBa,GAwBb,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO7B,EACP8B,SAtBkB,SAACC,GAC3B,IAAMC,GAAcD,EAAME,OAAOJ,MAEjCR,EAAWW,GACXV,EAAe,IAaT,SAOGL,EAAeH,KAAI,SAACoB,GAAD,OAClB,wBAAqBL,MAAOK,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAnDW,GAoDXC,QAASA,EACTC,YAAaA,EACbC,aAAcoB,IAGhB,6BACGI,EAAaZ,KAAI,SAAAC,GAAE,OAClB,oBAAI,UAAQ,OAAZ,SAA6BA,GAALA,YC7DlCqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b358aaf6.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const amountOfPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, amountOfPages);\n\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === amountOfPages;\n\n  const handlePrevLink = () => {\n    if (!firstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextLink = () => {\n    if (!lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: firstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={handlePrevLink}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(el => (\n        <li\n          className={cn('page-item', { active: el === currentPage })}\n          key={el}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${el}`}\n            onClick={() => onPageChange(el)}\n          >\n            {el}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: lastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastPage}\n          onClick={handleNextLink}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst totalItems = 42;\nconst perPageOptions = [3, 5, 10, 20];\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstItemIndex = (currentPage - 1) * perPage;\n  const lastItemIndex = Math.min(firstItemIndex + perPage, totalItems);\n  const currentItems = items.slice(firstItemIndex, lastItemIndex);\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = +event.target.value;\n\n    setPerPage(newPerPage);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex + 1} - ${lastItemIndex} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            {perPageOptions.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {currentItems.map(el => (\n          <li data-cy=\"item\" key={el}>{el}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}